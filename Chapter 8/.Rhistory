,col = c("red","black","blue","green"), text.width=c(0,1,2,3),
lty = 2,pch = 20,horiz = TRUE)
legend("top",c("Bagging","Random Forest","Boosting","Logistic Regression")
,col = c("red","black","blue","green"), text.width=c(0,0.08,0.08,0.08),
lty = 2,pch = 20,horiz = TRUE)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.2))
abline(h = test.error.log, col = "green")
legend("top",c("Bagging","Random Forest","Boosting","Logistic Regression")
,col = c("red","black","blue","green"), text.width=c(0,0.08,0.08,0.08),
lty = 2,pch = 20,horiz = TRUE)
legend("top",c("Bagging","Random Forest","Boosting","Logistic Regression")
,col = c("red","black","blue","green"), text.width=c(0,2,4,8),
lty = 2,pch = 20,horiz = TRUE)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.2))
abline(h = test.error.log, col = "green")
legend("top",c("Bagging","Random Forest","Boosting","Logistic Regression")
,col = c("red","black","blue","green"), text.width=c(0,2,4,8),
lty = 2,pch = 20,horiz = TRUE)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.2))
abline(h = test.error.log, col = "green")
legend("top",c("Bagging","Random Forest","Boosting","Logistic Regression")
,col = c("red","black","blue","green"), text.width=c(0,8,16,24),
lty = 2,pch = 20,horiz = TRUE)
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression")
,col = c("red","black","blue","green"), text.width=c(0,8,16,24),
lty = 2,pch = 20,horiz = TRUE,bty ="n")
par(xpd=TRUE,mar=c(0, 0, 0, 0))
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.2))
abline(h = test.error.log, col = "green")
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression")
,col = c("red","black","blue","green"), text.width=c(0,8,16,24),
lty = 2,pch = 20,horiz = TRUE,bty ="n")
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.2))
abline(h = test.error.log, col = "green")
par(xpd=TRUE,mar=c(0, 0, 0, 0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression")
,col = c("red","black","blue","green"), text.width=c(0,8,16,24),
lty = 2,pch = 20,horiz = TRUE,bty ="n")
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression")
,col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n")
legend("bottom","groups",c("Bagging","Random Forest","Boosting","Logistic Regression")
,col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n")
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.2))
abline(h = test.error.log, col = "green")
legend("bottom","groups",c("Bagging","Random Forest","Boosting","Logistic Regression")
,col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n")
legend("bottom","groups",c("Bagging","Random Forest","Boosting","Logistic Regression")
,col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n",ncol = 4)
layout(rbind(1,2), heights=c(7,1))  # put legend on bottom 1/8th of the chart
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.2))
abline(h = test.error.log, col = "green")
par(xpd=TRUE,mar=c(0, 0, 0, 0))
legend("bottom","groups",c("Bagging","Random Forest","Boosting","Logistic Regression")
,col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n")
legend("bottom","groups",c("Bagging","Random Forest","Boosting","Logistic Regression")
,col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n", insec = c(-0.1,0))
par(oma=c(0, 0, 0, 5))
layout(rbind(1,2), heights=c(7,1))  # put legend on bottom 1/8th of the chart
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.2))
abline(h = test.error.log, col = "green")
par(oma=c(0, 0, 0, 5))
legend("bottom","groups",c("Bagging","Random Forest","Boosting","Logistic Regression")
,col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n", insec = c(-0.1,0)
legend("bottom","groups",c("Bagging","Random Forest","Boosting","Logistic Regression")
,col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n", insec = c(-0.1,0))
legend("bottom","groups",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n", insec = c(-0.1,0))
legend("bottom","groups",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n", xpd=NA)
par(oma=c(0, 0, 0, 1))
legend("bottom","groups",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n", xpd=NA)
layout(rbind(1,2), heights=c(7,1))  # put legend on bottom 1/8th of the chart
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.2))
abline(h = test.error.log, col = "green")
par(oma=c(0, 0, 0, 1))
legend("bottom","groups",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n", xpd=NA)
par(oma=c(0, 0.1, 0, 1))
legend("bottom","groups",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n", xpd=NA)
par(oma=c(0, 0.1, 0, 0.1))
legend("bottom","groups",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n", xpd=NA)
layout(rbind(1,2), heights=c(7,1))  # put legend on bottom 1/8th of the chart
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.2))
abline(h = test.error.log, col = "green")
par(oma=c(0, 0.1, 0, 0.1))
legend("bottom","groups",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n", xpd=NA)
layout(rbind(1,2), heights=c(7,1))  # put legend on bottom 1/8th of the chart
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(oma=c(0, 0.1, 0, 0.1))
legend("bottom","groups",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n", xpd=NA)
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n", xpd=NA)
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n", xpd=NA,par('usr')[2])
layout(rbind(1,2), heights=c(7,1))  # put legend on bottom 1/8th of the chart
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(oma=c(0, 0.1, 0, 0.1))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n", xpd=NA,par('usr')[2])
par(oma=c(0, 0, 0, 0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n", xpd=NA)
layout(rbind(1,2), heights=c(7,1))  # put legend on bottom 1/8th of the chart
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(oma=c(0, 0, 0, 0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n", xpd=NA)
layout(rbind(1,2), heights=c(7,1))  # put legend on bottom 1/8th of the chart
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n", xpd=NA)
par(oma=c(0, -1, -1, -1))
par(oma=c(0, 0, 0, 0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n", xpd=NA)
layout(rbind(1,2), heights=c(6,1))  # put legend on bottom 1/8th of the chart
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(oma=c(0, 0, 0, 0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n", xpd=NA)
layout(rbind(1,2), heights=c(4,1))  # put legend on bottom 1/8th of the chart
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(oma=c(0, 0, 0, 0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n", xpd=NA)
layout(rbind(1,2), heights=c(6,1))  # put legend on bottom 1/8th of the chart
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(oma=c(0, 0, 0, 0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n", xpd=NA)
layout(rbind(1,2), heights=c(7,1))  # put legend on bottom 1/8th of the chart
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(oma=c(0, 0, 0, 0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,horiz = TRUE,bty ="n", xpd=NA)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(oma=c(0, 0, 0, 0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,bty ="n", xpd=NA)
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
layout(rbind(1,2), heights=c(7,1))  # put legend on bottom 1/8th of the chart
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(oma=c(0, 0, 0, 0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
layout(rbind(1,1), heights=c(7,1))  # put legend on bottom 1/8th of the chart
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(oma=c(0, 0, 0, 0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
layout(rbind(1,1.5), heights=c(7,1))  # put legend on bottom 1/8th of the chart
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(oma=c(0, 0, 0, 0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
layout(rbind(1,1.5), heights=c(7,1))  # put legend on bottom 1/8th of the chart
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(oma=c(0, 0, 0, 0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(oma=c(0, 0, 0, 0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(oma=c(1, 0, 0, 0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(oma=c(-1, 0, 0, 0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(oma=c(-2, 0, 0, 0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(oma=c(1, 0, 0, 0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(oma=c(1, 0, 0, 0),mar=c(3,0,0,0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(oma=c(1, 0, 0, 0),mar=c(1,0,0,0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(oma=c(1, 0, 0, 0),mar=c(4,0,0,0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(oma=c(1, 0, 0, 0),mar=c(4,1,0,0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
par(oma=c(1, 0, 0, 0),mar=c(4,0,0,0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(1,0,0,0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(1,1,1,1))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(3,3,3,3))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(5,5,5,5))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(5,5,5,10))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(5,5,0,10))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
par(mar=c(5,5,0,1))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(5,8,0,0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
par(mar=c(5,8,0,0),oma =c(1,0,0,0))
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(5,8,0,0),oma =c(1,0,0,0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(5,8,0,0),oma =c(0,0,1,0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(5,8,0,0),oma =c(0,0,2,0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(5,8,0,0),oma =c(0,0,4,0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(5,8,0,0),oma =c(0,0,0,0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(5,8,0,0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(5,2,0,0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(5,2,0,0))
legend("bottom",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
legend("bottom","groups",c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n", xpd=NA)
legend("bottom","groups",legend = c("Bagging","Random Forest","Boosting","Logistic Regression"),
col = c("red","black","blue","green"),
lty = 2,pch = 20,,horiz = TRUE, bty ="n")
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(5,2,0,0))
legend("bottom",legend = c("Bagging","Random Forest","Boosting","Logistic Regression"),
col =  c("red","black","blue","green"))
legend("bottom",legend = c("Bagging","Random Forest","Boosting","Logistic Regression"),
col =  c("red","black","blue","green"),horiz = TRUE)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(5,2,0,0))
legend("bottom",legend = c("Bagging","Random Forest","Boosting","Logistic Regression"),
col =  c("red","black","blue","green"),horiz = TRUE,lty = 2,pch = 20)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(5,5,0,0))
legend("bottom",legend = c("Bagging","Random Forest","Boosting","Logistic Regression"),
col =  c("red","black","blue","green"),horiz = TRUE,lty = 2,pch = 20)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(5,1,0,0))
legend("bottom",legend = c("Bagging","Random Forest","Boosting","Logistic Regression"),
col =  c("red","black","blue","green"),horiz = TRUE,lty = 2,pch = 20)
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(5,1,0,0))
legend("bottom",legend = c("Bagging","Random Forest","Boosting","Logistic Regression"),
col =  c("red","black","blue","green"),horiz = TRUE,lty = 2,pch = 20)
legend("bottom",legend = c("Bagging","Random Forest","Boosting","Logistic Regression"),
col =  c("red","black","blue","green"),horiz = TRUE,lty = 2,pch = 20,inset = c(0, -0.1))
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(5,1,0,0))
legend("bottom",legend = c("Bagging","Random Forest","Boosting","Logistic Regression"),
col =  c("red","black","blue","green"),horiz = TRUE,lty = 2,pch = 20,inset = c(0, -0.1))
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(5,1,0,0))
legend("bottom",legend = c("Bagging","Random Forest","Boosting","Logistic Regression"),
col =  c("red","black","blue","green"),horiz = TRUE,lty = 2,pch = 20,inset = c(0, 0.1))
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(5,1,0,0))
legend("bottom",legend = c("Bagging","Random Forest","Boosting","Logistic Regression"),
col =  c("red","black","blue","green"),horiz = TRUE,lty = 2,pch = 20,inset = c(0, 0.1))
legend("bottom",legend = c("Bagging","Random Forest","Boosting","Logistic Regression"),
col =  c("red","black","blue","green"),horiz = TRUE,lty = 2,pch = 20, bty = "n",
inset = c(0, 0.1))
legend("bottom",legend = c("Bagging","Random Forest","Boosting","Logistic Regression"),
col =  c("red","black","blue","green"),horiz = TRUE,lty = 2,pch = 20, bty = "n",
inset = c(0, -0.1))
legend("bottom",legend = c("Bagging","Random Forest","Boosting","Logistic Regression"),
col =  c("red","black","blue","green"),horiz = TRUE,lty = 2,pch = 20, bty = "n",
inset = c(0, -0.4))
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(5,1,0,0))
legend("bottom",legend = c("Bagging","Random Forest","Boosting","Logistic Regression"),
col =  c("red","black","blue","green"),horiz = TRUE,lty = 2,pch = 20, bty = "n",
inset = c(0, -0.4))
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(1,1,0,0))
legend("top",legend = c("Bagging","Random Forest","Boosting","Logistic Regression"),
col =  c("red","black","blue","green"),horiz = TRUE,lty = 2,pch = 20, bty = "n",
inset = c(0, -0.4))
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(1,1,0,0))
legend("top",legend = c("Bagging","Random Forest","Boosting","Logistic Regression"),
col =  c("red","black","blue","green"),horiz = TRUE,lty = 2,pch = 20, bty = "n",
inset = c(0, -0.4))
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(1,1,0,0))
legend("top",legend = c("Bagging","Random Forest","Boosting","Logistic Regression"),
col =  c("red","black","blue","green"),horiz = TRUE,lty = 2,pch = 20, bty = "n")
matplot(ntrees,test.error, xlab = "Number of Trees", "ylab" = "Misclassification Error",
type = "b", pch = 20, lty = 2, col = c("red","black","blue"), ylim = c(0.09,0.16))
abline(h = test.error.log, col = "green")
par(mar=c(1,1,0,0))
legend("top",legend = c("Bagging","Random Forest","Boosting","Logistic Regression"),
col =  c("red","black","blue","green"),horiz = TRUE,lty = 2,pch = 20, bty = "n")
